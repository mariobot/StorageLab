@using StorageModels
@model Azure.Pageable<TableProduct>;

@{
    ViewData["Title"] = "Table";
}

<h1>Table Item</h1>

<h4></h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <table class="table table-bordered">
            <tr>
                <td>PartitionKey</td>
                <td>RowKey</td>
                <td>Quantity</td>
                <td>Name</td>
                <td>Sale</td>
                <td>Timestamp</td>
                <td>Delete</td>
            </tr>            
            @foreach(TableProduct prod in Model)
            {
                <tr>
                    <td>@prod.PartitionKey</td>
                    <td>@prod.RowKey</td>
                    <td>@prod.Quantity</td>
                    <td>@prod.Name</td>
                    <td>@prod.Sale</td>
                    <td>@prod.Timestamp</td>
                    <td>
                    <form asp-action="DeleteTableRecord">
                        <input type="hidden" value="@prod.PartitionKey" name="partitionkey">
                        <input type="hidden" value="@prod.RowKey" name="rowkey">
                        <div class="form-group">
                            <input type="submit" value="Delete" class="btn btn-danger" />
                        </div>
                    </form>
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

<div>
    <br />
    <a asp-controller="Storage" asp-action="Containers">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
